// Mocks generated by Mockito 5.2.0 from annotations
// in football/test/features/home/data/model/fixtures_model_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:football/core/api/rest_client.dart' as _i3;
import 'package:football/features/home/data/model/fixtures/fixtures_model.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeFixturesModel_0 extends _i1.Fake implements _i2.FixturesModel {}

/// A class which mocks [RestClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockRestClient extends _i1.Mock implements _i3.RestClient {
  MockRestClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.FixturesModel> getFixtures({int? leagueId, int? season}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #getFixtures, [], {#leagueId: leagueId, #season: season}),
              returnValue:
                  Future<_i2.FixturesModel>.value(_FakeFixturesModel_0()))
          as _i4.Future<_i2.FixturesModel>);
  @override
  _i4.Future<dynamic> getFixtureLineUps({int? fixtureId}) =>
      (super.noSuchMethod(
          Invocation.method(#getFixtureLineUps, [], {#fixtureId: fixtureId}),
          returnValue: Future<dynamic>.value()) as _i4.Future<dynamic>);
}
